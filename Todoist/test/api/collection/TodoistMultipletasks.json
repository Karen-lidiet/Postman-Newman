{
	"info": {
		"_postman_id": "713a0801-584f-45cf-b11c-f49c89e7ba99",
		"name": "Multiple tasks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create multiple tasks",
			"item": [
				{
					"name": "Create multiple Tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var taskid = pm.response.json().id;\r",
									"pm.environment.set(\"taskId\", taskid);\r",
									"\r",
									"\r",
									"pm.test(\"Task name should matches with name set in the env variable \", function(){\r",
									"var taskName = pm.iterationData.get(\"taskName\");\r",
									"var taskContent = pm.response.json().content;\r",
									"pm.expect(taskContent).to.eql(taskName);\r",
									"})\r",
									"\r",
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"assigner\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"project_id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"section_id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"order\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"content\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"completed\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"label_ids\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"priority\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"comment_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"creator\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"created\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"assigner\",\r",
									"    \"project_id\",\r",
									"    \"section_id\",\r",
									"    \"order\",\r",
									"    \"content\",\r",
									"    \"completed\",\r",
									"    \"label_ids\",\r",
									"    \"priority\",\r",
									"    \"comment_count\",\r",
									"    \"creator\",\r",
									"    \"created\",\r",
									"    \"url\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"var data = pm.response.json();\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(data, schema)).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-Id",
								"value": "$(uuidgen)"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer $token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"{{taskName}}\"\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}